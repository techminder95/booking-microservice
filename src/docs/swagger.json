{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Role": {
				"enum": [
					"USER",
					"ADMIN"
				],
				"type": "string"
			},
			"CreateUserRequestDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"required": [
					"email",
					"password",
					"name",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"StringFieldUpdateOperationsInput": {
				"properties": {
					"set": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"NullableStringFieldUpdateOperationsInput": {
				"properties": {
					"set": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object"
			},
			"EnumRoleFieldUpdateOperationsInput": {
				"properties": {
					"set": {
						"$ref": "#/components/schemas/Role"
					}
				},
				"type": "object"
			},
			"BoolFieldUpdateOperationsInput": {
				"properties": {
					"set": {
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"DateTimeFieldUpdateOperationsInput": {
				"properties": {
					"set": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"type": "object"
			},
			"Without_any.any_": {
				"properties": {},
				"type": "object"
			},
			"TokenType": {
				"type": "string",
				"enum": [
					"ACCESS",
					"REFRESH",
					"RESET_PASSWORD",
					"VERIFY_EMAIL"
				]
			},
			"TokenUncheckedCreateWithoutUserInput": {
				"properties": {
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"type": "boolean"
					},
					"expires": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"$ref": "#/components/schemas/TokenType"
					},
					"token": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"blacklisted",
					"expires",
					"type",
					"token"
				],
				"type": "object"
			},
			"TokenCreateWithoutUserInput": {
				"properties": {
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"type": "boolean"
					},
					"expires": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"$ref": "#/components/schemas/TokenType"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"blacklisted",
					"expires",
					"type",
					"token"
				],
				"type": "object"
			},
			"XOR_Enumerable_TokenCreateWithoutUserInput_.Enumerable_TokenUncheckedCreateWithoutUserInput__": {
				"anyOf": [
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenUncheckedCreateWithoutUserInput"
							}
						]
					},
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenCreateWithoutUserInput"
							}
						]
					},
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/TokenUncheckedCreateWithoutUserInput"
								},
								"type": "array"
							}
						]
					},
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/TokenCreateWithoutUserInput"
								},
								"type": "array"
							}
						]
					}
				],
				"description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
			},
			"TokenWhereUniqueInput": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object"
			},
			"XOR_TokenCreateWithoutUserInput.TokenUncheckedCreateWithoutUserInput_": {
				"anyOf": [
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenUncheckedCreateWithoutUserInput"
							}
						]
					},
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenCreateWithoutUserInput"
							}
						]
					}
				],
				"description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
			},
			"TokenCreateOrConnectWithoutUserInput": {
				"properties": {
					"create": {
						"$ref": "#/components/schemas/XOR_TokenCreateWithoutUserInput.TokenUncheckedCreateWithoutUserInput_"
					},
					"where": {
						"$ref": "#/components/schemas/TokenWhereUniqueInput"
					}
				},
				"required": [
					"create",
					"where"
				],
				"type": "object"
			},
			"Enumerable_TokenCreateOrConnectWithoutUserInput_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenCreateOrConnectWithoutUserInput"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenCreateOrConnectWithoutUserInput"
						},
						"type": "array"
					}
				]
			},
			"IntFieldUpdateOperationsInput": {
				"properties": {
					"divide": {
						"type": "number",
						"format": "double"
					},
					"multiply": {
						"type": "number",
						"format": "double"
					},
					"decrement": {
						"type": "number",
						"format": "double"
					},
					"increment": {
						"type": "number",
						"format": "double"
					},
					"set": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object"
			},
			"EnumTokenTypeFieldUpdateOperationsInput": {
				"properties": {
					"set": {
						"$ref": "#/components/schemas/TokenType"
					}
				},
				"type": "object"
			},
			"TokenUncheckedUpdateWithoutUserInput": {
				"properties": {
					"createdAt": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
							},
							{
								"type": "boolean"
							}
						]
					},
					"expires": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EnumTokenTypeFieldUpdateOperationsInput"
							},
							{
								"$ref": "#/components/schemas/TokenType"
							}
						]
					},
					"token": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
							},
							{
								"type": "string"
							}
						]
					},
					"id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"type": "object"
			},
			"TokenUpdateWithoutUserInput": {
				"properties": {
					"createdAt": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
							},
							{
								"type": "boolean"
							}
						]
					},
					"expires": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EnumTokenTypeFieldUpdateOperationsInput"
							},
							{
								"$ref": "#/components/schemas/TokenType"
							}
						]
					},
					"token": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"type": "object"
			},
			"XOR_TokenUpdateWithoutUserInput.TokenUncheckedUpdateWithoutUserInput_": {
				"anyOf": [
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenUncheckedUpdateWithoutUserInput"
							}
						]
					},
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenUpdateWithoutUserInput"
							}
						]
					}
				],
				"description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
			},
			"TokenUpsertWithWhereUniqueWithoutUserInput": {
				"properties": {
					"create": {
						"$ref": "#/components/schemas/XOR_TokenCreateWithoutUserInput.TokenUncheckedCreateWithoutUserInput_"
					},
					"update": {
						"$ref": "#/components/schemas/XOR_TokenUpdateWithoutUserInput.TokenUncheckedUpdateWithoutUserInput_"
					},
					"where": {
						"$ref": "#/components/schemas/TokenWhereUniqueInput"
					}
				},
				"required": [
					"create",
					"update",
					"where"
				],
				"type": "object"
			},
			"Enumerable_TokenUpsertWithWhereUniqueWithoutUserInput_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenUpsertWithWhereUniqueWithoutUserInput"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenUpsertWithWhereUniqueWithoutUserInput"
						},
						"type": "array"
					}
				]
			},
			"TokenCreateManyUserInput": {
				"properties": {
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"type": "boolean"
					},
					"expires": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"$ref": "#/components/schemas/TokenType"
					},
					"token": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"blacklisted",
					"expires",
					"type",
					"token"
				],
				"type": "object"
			},
			"Enumerable_TokenCreateManyUserInput_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenCreateManyUserInput"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenCreateManyUserInput"
						},
						"type": "array"
					}
				]
			},
			"TokenCreateManyUserInputEnvelope": {
				"properties": {
					"skipDuplicates": {
						"type": "boolean"
					},
					"data": {
						"$ref": "#/components/schemas/Enumerable_TokenCreateManyUserInput_"
					}
				},
				"required": [
					"data"
				],
				"type": "object"
			},
			"Enumerable_TokenWhereUniqueInput_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenWhereUniqueInput"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenWhereUniqueInput"
						},
						"type": "array"
					}
				]
			},
			"TokenUpdateWithWhereUniqueWithoutUserInput": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/XOR_TokenUpdateWithoutUserInput.TokenUncheckedUpdateWithoutUserInput_"
					},
					"where": {
						"$ref": "#/components/schemas/TokenWhereUniqueInput"
					}
				},
				"required": [
					"data",
					"where"
				],
				"type": "object"
			},
			"Enumerable_TokenUpdateWithWhereUniqueWithoutUserInput_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenUpdateWithWhereUniqueWithoutUserInput"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenUpdateWithWhereUniqueWithoutUserInput"
						},
						"type": "array"
					}
				]
			},
			"TokenScalarWhereInput": {
				"properties": {
					"userId": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IntFilter"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"createdAt": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFilter"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BoolFilter"
							},
							{
								"type": "boolean"
							}
						]
					},
					"expires": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFilter"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EnumTokenTypeFilter"
							},
							{
								"$ref": "#/components/schemas/TokenType"
							}
						]
					},
					"token": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/StringFilter"
							},
							{
								"type": "string"
							}
						]
					},
					"id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IntFilter"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"NOT": {
						"$ref": "#/components/schemas/Enumerable_TokenScalarWhereInput_"
					},
					"OR": {
						"$ref": "#/components/schemas/Enumerable_TokenScalarWhereInput_"
					},
					"AND": {
						"$ref": "#/components/schemas/Enumerable_TokenScalarWhereInput_"
					}
				},
				"type": "object"
			},
			"Enumerable_TokenScalarWhereInput_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenScalarWhereInput"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenScalarWhereInput"
						},
						"type": "array"
					}
				]
			},
			"Enumerable_number_": {
				"anyOf": [
					{
						"type": "number",
						"format": "double"
					},
					{
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					}
				]
			},
			"NestedIntFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedIntFilter"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"gte": {
						"type": "number",
						"format": "double"
					},
					"gt": {
						"type": "number",
						"format": "double"
					},
					"lte": {
						"type": "number",
						"format": "double"
					},
					"lt": {
						"type": "number",
						"format": "double"
					},
					"notIn": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_number_"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"in": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_number_"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"equals": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object"
			},
			"IntFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedIntFilter"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"gte": {
						"type": "number",
						"format": "double"
					},
					"gt": {
						"type": "number",
						"format": "double"
					},
					"lte": {
						"type": "number",
						"format": "double"
					},
					"lt": {
						"type": "number",
						"format": "double"
					},
					"notIn": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_number_"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"in": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_number_"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"equals": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object"
			},
			"Enumerable_string_": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				]
			},
			"QueryMode": {
				"type": "string",
				"enum": [
					"default",
					"insensitive"
				]
			},
			"NestedStringFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedStringFilter"
							},
							{
								"type": "string"
							}
						]
					},
					"endsWith": {
						"type": "string"
					},
					"startsWith": {
						"type": "string"
					},
					"contains": {
						"type": "string"
					},
					"gte": {
						"type": "string"
					},
					"gt": {
						"type": "string"
					},
					"lte": {
						"type": "string"
					},
					"lt": {
						"type": "string"
					},
					"notIn": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string"
							}
						]
					},
					"in": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string"
							}
						]
					},
					"equals": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"StringFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedStringFilter"
							},
							{
								"type": "string"
							}
						]
					},
					"mode": {
						"$ref": "#/components/schemas/QueryMode"
					},
					"endsWith": {
						"type": "string"
					},
					"startsWith": {
						"type": "string"
					},
					"contains": {
						"type": "string"
					},
					"gte": {
						"type": "string"
					},
					"gt": {
						"type": "string"
					},
					"lte": {
						"type": "string"
					},
					"lt": {
						"type": "string"
					},
					"notIn": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string"
							}
						]
					},
					"in": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string"
							}
						]
					},
					"equals": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"Enumerable_TokenType_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenType"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenType"
						},
						"type": "array"
					}
				]
			},
			"NestedEnumTokenTypeFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedEnumTokenTypeFilter"
							},
							{
								"$ref": "#/components/schemas/TokenType"
							}
						]
					},
					"notIn": {
						"$ref": "#/components/schemas/Enumerable_TokenType_"
					},
					"in": {
						"$ref": "#/components/schemas/Enumerable_TokenType_"
					},
					"equals": {
						"$ref": "#/components/schemas/TokenType"
					}
				},
				"type": "object"
			},
			"EnumTokenTypeFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedEnumTokenTypeFilter"
							},
							{
								"$ref": "#/components/schemas/TokenType"
							}
						]
					},
					"notIn": {
						"$ref": "#/components/schemas/Enumerable_TokenType_"
					},
					"in": {
						"$ref": "#/components/schemas/Enumerable_TokenType_"
					},
					"equals": {
						"$ref": "#/components/schemas/TokenType"
					}
				},
				"type": "object"
			},
			"Enumerable_Date_": {
				"anyOf": [
					{
						"type": "string",
						"format": "date-time"
					},
					{
						"items": {
							"type": "string",
							"format": "date-time"
						},
						"type": "array"
					}
				]
			},
			"NestedDateTimeFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedDateTimeFilter"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"gte": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"gt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"lte": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"lt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"notIn": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_Date_"
							},
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"in": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_Date_"
							},
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"equals": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"type": "object"
			},
			"DateTimeFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedDateTimeFilter"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"gte": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"gt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"lte": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"lt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"notIn": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_Date_"
							},
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"in": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Enumerable_Date_"
							},
							{
								"$ref": "#/components/schemas/Enumerable_string_"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"equals": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"type": "object"
			},
			"NestedBoolFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedBoolFilter"
							},
							{
								"type": "boolean"
							}
						]
					},
					"equals": {
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"BoolFilter": {
				"properties": {
					"not": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NestedBoolFilter"
							},
							{
								"type": "boolean"
							}
						]
					},
					"equals": {
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"TokenUncheckedUpdateManyWithoutTokenInput": {
				"properties": {
					"createdAt": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
							},
							{
								"type": "boolean"
							}
						]
					},
					"expires": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EnumTokenTypeFieldUpdateOperationsInput"
							},
							{
								"$ref": "#/components/schemas/TokenType"
							}
						]
					},
					"token": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
							},
							{
								"type": "string"
							}
						]
					},
					"id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"type": "object"
			},
			"TokenUpdateManyMutationInput": {
				"properties": {
					"createdAt": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"blacklisted": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
							},
							{
								"type": "boolean"
							}
						]
					},
					"expires": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"type": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EnumTokenTypeFieldUpdateOperationsInput"
							},
							{
								"$ref": "#/components/schemas/TokenType"
							}
						]
					},
					"token": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"type": "object"
			},
			"XOR_TokenUpdateManyMutationInput.TokenUncheckedUpdateManyWithoutTokenInput_": {
				"anyOf": [
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenUncheckedUpdateManyWithoutTokenInput"
							}
						]
					},
					{
						"allOf": [
							{
								"$ref": "#/components/schemas/Without_any.any_"
							},
							{
								"$ref": "#/components/schemas/TokenUpdateManyMutationInput"
							}
						]
					}
				],
				"description": "XOR is needed to have a real mutually exclusive union type\nhttps://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types"
			},
			"TokenUpdateManyWithWhereWithoutUserInput": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/XOR_TokenUpdateManyMutationInput.TokenUncheckedUpdateManyWithoutTokenInput_"
					},
					"where": {
						"$ref": "#/components/schemas/TokenScalarWhereInput"
					}
				},
				"required": [
					"data",
					"where"
				],
				"type": "object"
			},
			"Enumerable_TokenUpdateManyWithWhereWithoutUserInput_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/TokenUpdateManyWithWhereWithoutUserInput"
					},
					{
						"items": {
							"$ref": "#/components/schemas/TokenUpdateManyWithWhereWithoutUserInput"
						},
						"type": "array"
					}
				]
			},
			"TokenUpdateManyWithoutUserNestedInput": {
				"properties": {
					"deleteMany": {
						"$ref": "#/components/schemas/Enumerable_TokenScalarWhereInput_"
					},
					"updateMany": {
						"$ref": "#/components/schemas/Enumerable_TokenUpdateManyWithWhereWithoutUserInput_"
					},
					"update": {
						"$ref": "#/components/schemas/Enumerable_TokenUpdateWithWhereUniqueWithoutUserInput_"
					},
					"connect": {
						"$ref": "#/components/schemas/Enumerable_TokenWhereUniqueInput_"
					},
					"delete": {
						"$ref": "#/components/schemas/Enumerable_TokenWhereUniqueInput_"
					},
					"disconnect": {
						"$ref": "#/components/schemas/Enumerable_TokenWhereUniqueInput_"
					},
					"set": {
						"$ref": "#/components/schemas/Enumerable_TokenWhereUniqueInput_"
					},
					"createMany": {
						"$ref": "#/components/schemas/TokenCreateManyUserInputEnvelope"
					},
					"upsert": {
						"$ref": "#/components/schemas/Enumerable_TokenUpsertWithWhereUniqueWithoutUserInput_"
					},
					"connectOrCreate": {
						"$ref": "#/components/schemas/Enumerable_TokenCreateOrConnectWithoutUserInput_"
					},
					"create": {
						"$ref": "#/components/schemas/XOR_Enumerable_TokenCreateWithoutUserInput_.Enumerable_TokenUncheckedCreateWithoutUserInput__"
					}
				},
				"type": "object"
			},
			"Prisma.UserUpdateInput": {
				"properties": {
					"Token": {
						"$ref": "#/components/schemas/TokenUpdateManyWithoutUserNestedInput"
					},
					"updatedAt": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"createdAt": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"isEmailVerified": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
							},
							{
								"type": "boolean"
							}
						]
					},
					"role": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
							},
							{
								"$ref": "#/components/schemas/Role"
							}
						]
					},
					"password": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
							},
							{
								"type": "string"
							}
						]
					},
					"name": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"email": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"type": "object"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "prisma-express-typescript-boilerplate",
		"version": "1.0.0",
		"description": "REST API Boilerplate with Node JS, TypeScript, Express and Prisma",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Antonio Lázaro"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/user/create": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "CREATED",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserRequestDto"
							}
						}
					}
				}
			}
		},
		"/user/get": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "role",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Role"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/get-by-id": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user/update": {
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"204": {
						"description": "NO_CONTENT",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Prisma.UserUpdateInput"
							}
						}
					}
				}
			}
		},
		"/user/delete": {
			"delete": {
				"operationId": "DeleteUserById",
				"responses": {
					"204": {
						"description": "NO_CONTENT",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}